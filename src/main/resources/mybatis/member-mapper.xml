<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">


	<!-- 로그인 -->
	<select id="login" parameterType="MemberDto"
		resultType="MemberDto">
		SELECT *
		FROM MEMBER
		WHERE MEMBER_ID = #{member_id}
		AND
		MEMBER_PW = #{member_pw}
	</select>

	<!--암호화 여부 확인 -->
	<select id="encryptchk" resultType="MemberDto">
		SELECT MEMBER_ID, MEMBER_PW
		FROM MEMBER
		WHERE MEMBER_ID = #{member_id}
	</select>
	<insert id="join" parameterType="MemberDto">
		INSERT INTO MEMBER(member_id,
		member_pw, member_pwchk,member_no, member_name, member_nickname,
		member_addr, member_email, member_phone, member_regdate)
		VALUES(
		#{member_id}, #{member_pw}, #{member_pwchk},
		MEMBER_NO_SEQ.NEXTVAL,
		#{member_name}, #{member_nickname},
		#{member_addr}, #{member_email},
		#{member_phone}, SYSDATE
		)
	</insert>

	<!-- 아이디 중복체크 / 아이디를 조건으로 카운트 : 있으면 1 없으면 0이 조회 조회 결과타입을 resultType int로 
		설정 -->
	<select id="idChk" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE
		MEMBER_ID = #{member_id}
	</select>


	<!--닉네임 중복체크 -->
	<select id="nickChk" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE
		MEMBER_NICKNAME = #{member_nickname}
	</select>
	<!-- 아이디 찾기 -->
	<select id="idfind" parameterType="MemberDto"
		resultType="MemberDto">
		SELECT *
		FROM MEMBER
		WHERE MEMBER_NAME = #{member_name}
		AND MEMBER_PHONE = #{member_phone}
	</select>

	<!-- 비밀번호 찾기 -->
	<select id="pwfind" parameterType="MemberDto"
		resultType="MemberDto">
		SELECT MEMBER_ID, MEMBER_EMAIL
		FROM MEMBER
		WHERE MEMBER_ID = #{member_id}
		AND MEMBER_EMAIL = #{member_email}
	</select>

	<!-- SNS 회원가입 -->
	<insert id="snsjoin" parameterType="MemberDto">
		INSERT INTO MEMBER(member_id,member_pw,member_no, member_name,
		member_nickname,
		member_addr, member_email, member_phone, member_regdate)
		VALUES(
		#{member_id}, #{member_pw},MEMBER_NO_SEQ.NEXTVAL,
		#{member_name}, #{member_nickname},
		#{member_addr}, #{member_email},
		#{member_phone}, SYSDATE
		)
	</insert>

	<!--info update -->
	<update id="userupdate" parameterType="MemberDto">
		UPDATE MEMBER
		SET MEMBER_PW = #{member_pw},
		MEMBER_NICKNAME = #{member_nickname},
		MEMBER_ADDR = #{member_addr},
		MEMBER_EMAIL = #{member_email},
		MEMBER_PHONE = #{member_phone}
		WHERE MEMBER_ID = #{member_id}
	</update>

	<!--pw update -->
	<update id="pwupdate" parameterType="MemberDto">
		UPDATE MEMBER
		SET MEMBER_PW = #{member_pw}
		WHERE MEMBER_ID = #{member_id}
	</update>

	<!--info update -->
	<update id="arupdate" parameterType="MemberDto">
		UPDATE MEMBER
		SET MEMBER_NICKNAME = #{member_nickname},
		MEMBER_ADDR = #{member_addr},
		MEMBER_EMAIL = #{member_email},
		MEMBER_PHONE = #{member_phone},
		MEMBER_ROLE = #{member_role}
		WHERE MEMBER_ID = #{member_id}

	</update>
	
	<!-- notification -->
	<select id="showNoti" parameterType="CalendarDto" resultType="CalendarDto">
		SELECT C.MEMBER_ID, C.CAL_START
		FROM CALENDAR C
		JOIN MEMBER M
		ON C.MEMBER_ID = M.MEMBER_ID
		JOIN FOLLOW F
		ON F.ARTIST_ID = M.MEMBER_ID
		WHERE F.MEMBER_ID = #{member_id}
	</select>

</mapper>
